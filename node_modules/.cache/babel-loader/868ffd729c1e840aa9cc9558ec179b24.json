{"ast":null,"code":"var _jsxFileName = \"/Users/tsukasa/programming/udemy/react-youtube/src/pages/Search.js\";\nimport React, { useEffect, useContext } from 'react';\nimport Layout from '../components/layout/Layout';\nimport { useLocation } from 'react-router-dom';\nimport { fetchSearchData } from '../apis';\nimport { Store } from '../store/index';\nimport VideoGrid from '../components/videoGrid/VideoGrid';\nimport VideoGridItem from '../components/videoGridItem/VideoGridItem';\n\nconst Search = () => {\n  const {\n    globalState,\n    setGlobalState\n  } = useContext(Store);\n  const location = useLocation();\n\n  const setSearchResult = async () => {\n    const searchParams = new URLSearchParams(location.search);\n    const query = searchParams.get('query');\n\n    if (query) {\n      await fetchSearchData(query).then(res => {\n        setGlobalState({\n          type: 'SET_SEARCHED',\n          payload: {\n            searched: res.data.items\n          }\n        });\n      });\n    }\n  };\n\n  useEffect(() => {\n    setSearchResult(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(VideoGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, globalState.searched ? globalState.searched.map(search => {\n    return /*#__PURE__*/React.createElement(VideoGridItem, {\n      id: search.id.videoId,\n      key: search.id.VideoId,\n      src: search.snippet.thumnbnails.medium.url,\n      title: search.snippet.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    });\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 26\n    }\n  }, \"no data\")));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/tsukasa/programming/udemy/react-youtube/src/pages/Search.js"],"names":["React","useEffect","useContext","Layout","useLocation","fetchSearchData","Store","VideoGrid","VideoGridItem","Search","globalState","setGlobalState","location","setSearchResult","searchParams","URLSearchParams","search","query","get","then","res","type","payload","searched","data","items","map","id","videoId","VideoId","snippet","thumnbnails","medium","url","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,aAAP,MAA0B,2CAA1B;;AAGA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAAgCT,UAAU,CAACI,KAAD,CAAhD;AACA,QAAMM,QAAQ,GAAGR,WAAW,EAA5B;;AACA,QAAMS,eAAe,GAAG,YAAY;AAChC,UAAMC,YAAY,GAAG,IAAIC,eAAJ,CAAoBH,QAAQ,CAACI,MAA7B,CAArB;AACA,UAAMC,KAAK,GAAGH,YAAY,CAACI,GAAb,CAAiB,OAAjB,CAAd;;AAEA,QAAID,KAAJ,EAAU;AACN,YAAMZ,eAAe,CAACY,KAAD,CAAf,CAAuBE,IAAvB,CAA6BC,GAAD,IAAS;AACvCT,QAAAA,cAAc,CAAC;AAACU,UAAAA,IAAI,EAAC,cAAN;AAAsBC,UAAAA,OAAO,EAAC;AAACC,YAAAA,QAAQ,EAAEH,GAAG,CAACI,IAAJ,CAASC;AAApB;AAA9B,SAAD,CAAd;AACH,OAFK,CAAN;AAGH;AACJ,GATD;;AAWAxB,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,eAAe,GADH,CAEhB;AACC,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQH,WAAW,CAACa,QAAZ,GAAuBb,WAAW,CAACa,QAAZ,CAAqBG,GAArB,CAA0BV,MAAD,IAAY;AACxD,wBACI,oBAAC,aAAD;AACA,MAAA,EAAE,EAAEA,MAAM,CAACW,EAAP,CAAUC,OADd;AAEA,MAAA,GAAG,EAAEZ,MAAM,CAACW,EAAP,CAAUE,OAFf;AAGA,MAAA,GAAG,EAAEb,MAAM,CAACc,OAAP,CAAeC,WAAf,CAA2BC,MAA3B,CAAkCC,GAHvC;AAIA,MAAA,KAAK,EAAEjB,MAAM,CAACc,OAAP,CAAeI,KAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAQH,GATsB,CAAvB,gBASK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXb,CADJ,CADJ;AAkBH,CArCD;;AAuCA,eAAezB,MAAf","sourcesContent":["import React, { useEffect, useContext } from 'react'\nimport Layout from '../components/layout/Layout'\nimport { useLocation } from 'react-router-dom'\nimport { fetchSearchData } from '../apis'\nimport { Store } from '../store/index'\nimport VideoGrid from '../components/videoGrid/VideoGrid'\nimport VideoGridItem from '../components/videoGridItem/VideoGridItem'\n\n\nconst Search = () => {\n    const {globalState, setGlobalState} = useContext(Store)\n    const location = useLocation()\n    const setSearchResult = async () => {\n        const searchParams = new URLSearchParams(location.search)\n        const query = searchParams.get('query')\n\n        if (query){\n            await fetchSearchData(query).then((res) => {\n                setGlobalState({type:'SET_SEARCHED', payload:{searched: res.data.items}})\n            })\n        }\n    }\n\n    useEffect(() => {\n        setSearchResult()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <Layout>\n            <VideoGrid>\n                {\n                    globalState.searched ? globalState.searched.map((search) => {\n                        return(\n                            <VideoGridItem\n                            id={search.id.videoId}\n                            key={search.id.VideoId}\n                            src={search.snippet.thumnbnails.medium.url}\n                            title={search.snippet.title}                                \n                            />\n                        )\n                    }) : <span>no data</span>\n                }\n            </VideoGrid>\n        </Layout>\n    )\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}