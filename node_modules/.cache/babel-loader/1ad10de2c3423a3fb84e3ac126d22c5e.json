{"ast":null,"code":"var _jsxFileName = \"/Users/tsukasa/programming/udemy/react-youtube/src/store/index.js\";\nimport React, { createContext, useReducer } from 'react';\nconst initialState = {\n  popular: [],\n  selected: {},\n  related: [],\n  searched: [],\n  term: ''\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_POPULAR':\n      return { ...state,\n        popular: action.payload.popular\n      };\n\n    case 'SET_SELECTED':\n      return { ...state,\n        selected: action.payload.selected\n      };\n\n    case 'SET_RELATED':\n      return { ...state,\n        related: action.payload.related\n      };\n\n    case 'SET_':\n      return { ...state,\n        searched: action.payload.searched\n      };\n\n    case 'SET_TERM':\n      return { ...state,\n        term: action.payload.term\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const Store = createContext({\n  globalState: initialState,\n  setGlobalState: () => null\n});\nexport const StoreProvider = ({\n  children\n}) => {\n  const [globalState, setGlobalState] = useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(Store.Provider, {\n    value: {\n      globalState,\n      setGlobalState\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport default StoreProvider;","map":{"version":3,"sources":["/Users/tsukasa/programming/udemy/react-youtube/src/store/index.js"],"names":["React","createContext","useReducer","initialState","popular","selected","related","searched","term","reducer","state","action","type","payload","Store","globalState","setGlobalState","StoreProvider","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,OAAO,EAAE,EAHQ;AAIjBC,EAAAA,QAAQ,EAAE,EAJO;AAKjBC,EAAAA,IAAI,EAAE;AALW,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,aAAL;AACI,aAAO,EAAC,GAAGF,KAAJ;AAAWN,QAAAA,OAAO,EAAEO,MAAM,CAACE,OAAP,CAAeT;AAAnC,OAAP;;AACJ,SAAK,cAAL;AACI,aAAO,EAAC,GAAGM,KAAJ;AAAWL,QAAAA,QAAQ,EAAEM,MAAM,CAACE,OAAP,CAAeR;AAApC,OAAP;;AACJ,SAAK,aAAL;AACI,aAAO,EAAC,GAAGK,KAAJ;AAAWJ,QAAAA,OAAO,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAAnC,OAAP;;AACJ,SAAK,MAAL;AACI,aAAO,EAAC,GAAGI,KAAJ;AAAWH,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OAAP,CAAeN;AAApC,OAAP;;AACA,SAAK,UAAL;AACA,aAAO,EAAC,GAAGG,KAAJ;AAAWF,QAAAA,IAAI,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAAhC,OAAP;;AACJ;AACI,aAAOE,KAAP;AAZR;AAcH,CAfD;;AAiBA,OAAO,MAAMI,KAAK,GAAGb,aAAa,CAAC;AAC/Bc,EAAAA,WAAW,EAAEZ,YADkB;AAE/Ba,EAAAA,cAAc,EAAE,MAAM;AAFS,CAAD,CAA3B;AAKP,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC3C,QAAM,CAACH,WAAD,EAAcC,cAAd,IAAgCd,UAAU,CAACO,OAAD,EAAUN,YAAV,CAAhD;AACA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAE;AAACY,MAAAA,WAAD;AAAcC,MAAAA;AAAd,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwDE,QAAxD,CADJ;AAGH,CALM;AAOP,eAAeD,aAAf","sourcesContent":["import React, { createContext, useReducer } from 'react'\n\nconst initialState = {\n    popular: [],\n    selected: {},\n    related: [],\n    searched: [],\n    term: '',\n}\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'SET_POPULAR':\n            return {...state, popular: action.payload.popular }\n        case 'SET_SELECTED':\n            return {...state, selected: action.payload.selected}\n        case 'SET_RELATED':\n            return {...state, related: action.payload.related} \n        case 'SET_':\n            return {...state, searched: action.payload.searched}\n            case 'SET_TERM':\n            return {...state, term: action.payload.term}\n        default:\n            return state\n    }\n}\n\nexport const Store = createContext({\n    globalState: initialState,\n    setGlobalState: () => null\n})\n\nexport const StoreProvider = ({ children }) => {\n    const [globalState, setGlobalState] = useReducer(reducer, initialState)\n    return (\n        <Store.Provider value={{globalState, setGlobalState }}>{children}</Store.Provider>\n    )\n}\n\nexport default StoreProvider\n"]},"metadata":{},"sourceType":"module"}